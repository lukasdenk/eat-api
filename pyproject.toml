[tool.poetry]
name = "eat-api"
version = "0.1.0"
description = "Simple API for some (student) food places in Munich."
authors = ["TUM-Dev"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
lxml = "~4.9"
pyopenmensa = "~0.95"
requests = "~2.28"
deepl = "^1.2.1"

[tool.poetry.dev-dependencies]
mypy = "~0.991"
pre-commit = "~2.20"
pylint = "~2.15"
pytest = "~7.2"
types-requests = "~2.28"

[tool.mypy]
python_version = 3.9
ignore_missing_imports = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
no_implicit_reexport = true
strict_equality = true
pretty = true

[tool.pylint.master]
jobs = 1

[tool.pylint.message_control]
disable = ["missing-function-docstring", # too much work
        "missing-module-docstring", # too much work
        "missing-class-docstring", # too much work
        "line-too-long", # we have another hook for this
        "wrong-import-position", # we have another hook for this
        "no-member", # mypy does this job with less false positives
        "no-else-return", # depending on dev this is an antipattern.. not touching this debate
        "no-else-continue", # depending on dev this is an antipattern.. not touching this debate
        "no-else-break", # depending on dev this is an antipattern.. not touching this debate
        "invalid-name", # possible api-change.. DONT
        "fixme", # prevents users from committing things with a TODO in comments. Having more frequent commits is desirable
        "pointless-string-statement", # those care "comments"
        "too-many-locals", # TODO code quality
        "too-many-statements", # TODO code quality
        "too-many-branches", # TODO code quality
        "too-few-public-methods", #TODO code quality
        "too-many-arguments",
        "unsubscriptable-object",
        "consider-using-dict-items",
        "import-error", # produces weird PYTHONPATH issues. WONTFIX until pylint/pre-commit allows setting environment options.
        # to run this locally remove this line temporarily and call
        # `PYTHONPATH=./src pre-commit run -a` and `PYTHONPATH=./scripts pre-commit run -a`
]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
